{"version":3,"file":"main.1f04d0fa16972a88505a.js","mappings":"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","sources":["webpack://section_1_web/./src/index.js"],"sourcesContent":["import '/src/scss/normalize.css';\nimport '/src/scss/style.scss';\n\nconst KeyboardContainer = {\n  elements: {\n      keyboard: null,\n      keyboardButtons: null,\n      buttons: []\n  },\n\n  eventHandlers: {\n    oninput: null\n},\n\n  properties: {\n      value: \"\",\n      capsLock: false,\n      shift: false,\n      alt: false,\n      lang: 'En'\n  },\n\n// создаем элементы\ninit() {\nconst main = document.createElement('div');\nmain.classList.add('main');\ndocument.body.append(main);\n\nconst wrapper = document.createElement('div');\nwrapper.classList.add('wrapper');\nmain.append(wrapper);\n\nconst title = document.createElement('h1');\ntitle.classList.add('title');\ntitle.textContent = 'RSS Виртуальная клавиатура';\nmain.prepend(title);\n\nconst textarea = document.createElement('textarea');\ntextarea.classList.add('textarea');\nwrapper.append(textarea);\ntextarea.focus(); // устанавливает автофокус\n\nconst keyboard = document.createElement('div');\nkeyboard.classList.add('keyboard');\nwrapper.append(keyboard);\n\nconst keyboardButtons = document.createElement('div');\nkeyboardButtons.classList.add('keyboard-buttons');\nkeyboard.append(keyboardButtons);\nthis.elements.keyboardButtons = keyboardButtons; // изменяю null на массив с созданными кнопками\n\nconst description = document.createElement('p');\ndescription.classList.add('description');\ndescription.textContent = 'Клавиатура создана в операционной системе Windows';\nwrapper.append(description);\n\nconst switchLanguage = document.createElement('p');\nswitchLanguage.classList.add('switch-language');\nswitchLanguage.textContent = 'Для переключения языка комбинация клавиш: левыe ctrl + alt';\nwrapper.append(switchLanguage);\n\nkeyboardButtons.append(this.createButtons());\n\nthis.elements.buttons = this.elements.keyboardButtons.querySelectorAll('.keyboard-button');\n\ndocument.querySelectorAll(\".textarea\").forEach(elem => {\n  elem.addEventListener(\"focus\", () => {\n      this.open(elem.value, currentValue => {\n          elem.value = currentValue;\n          textarea.focus();\n\n      });\n  });\n});\n\n},\n\ntriggerEvent(handlerName) {\n\n  this.elements.buttons = this.elements.keyboardButtons.querySelector('.keyboard-button');\n// console.log(\"event:\" + handlerName);\n\n  if (typeof this.eventHandlers[handlerName] == \"function\") {\n      this.eventHandlers[handlerName](this.properties.value);\n  }\n},\n\nopen(initialValue, oninput) {\nthis.properties.value = \"\" || initialValue;\nthis.eventHandlers.oninput = oninput;\n},\n\ncreateButtons () {\n  const fragment = document.createDocumentFragment();\n  const buttonsEn = [\n    \"`\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"0\", \"Backspace\",\n    \"Tab\" ,\"q\", \"w\", \"e\", \"r\", \"t\", \"y\", \"u\", \"i\", \"o\", \"p\", \"[\", \"]\", \"\\\\\", \"Del\",\n    \"CapsLock\", \"a\", \"s\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \";\", \"'\", \"Enter\",\n    \"Shift\", \"z\", \"x\", \"c\", \"v\", \"b\", \"n\", \"m\", \",\", \".\", \"/\", \"↑\",\n    \"Ctrl\", \"Win\", \"Alt\", \"Space\", \"←\", \"↓\", \"→\"\n  ];\n\n  buttonsEn.forEach(button => {\n    const buttonElement = document.createElement('button');\n    const lineBreak = [\"Backspace\", \"Delete\", \"Enter\", \"↑\"].indexOf(button) !== -1; // переносы\n\n              buttonElement.setAttribute('type', 'button');\n              buttonElement.classList.add('keyboard-button');\n\n              switch(button) {\n                case \"`\":\n                  buttonElement.classList.add('btn-dark');\n                  buttonElement.textContent = \"`\";\n                  break;\n\n                case \"Backspace\":\n                  buttonElement.classList.add('btn-wide', 'btn-dark');\n                  buttonElement.textContent = \"Backspace\";\n\n                  buttonElement.addEventListener('click', () => {\n                    this.properties.value = this.properties.value.substring(0, this.properties.value.length - 1);\n                    this.triggerEvent ('oninput');\n                  });\n                  break;\n\n                  case \"Tab\":\n                  buttonElement.classList.add('btn-dark');\n                  buttonElement.textContent = \"Tab\";\n\n                  buttonElement.addEventListener('click', () => {\n                    this.properties.value +=  \"    \";\n                    this.triggerEvent ('oninput');\n                  });\n                  break;\n\n                  case \"Del\":\n                  buttonElement.classList.add('btn-dark');\n                  buttonElement.textContent = \"Del\";\n\n                  buttonElement.addEventListener('click', () => {\n                    this.properties.value = this.properties.value.substring(0, this.properties.value.length - 1);\n                    this.triggerEvent ('oninput');\n                  });\n                  break;\n\n                  case \"CapsLock\":\n                    buttonElement.classList.add('btn-wide', 'btn-dark');\n                    buttonElement.textContent = \"CapsLock\";\n\n                    buttonElement.addEventListener('click', () => {\n                      this.switchCapsLock();\n                      buttonElement.classList.toggle(this.properties.capsLock);\n                    });\n                    break;\n\n                  case \"Enter\":\n                  buttonElement.classList.add('btn-wide', 'btn-dark');\n                  buttonElement.textContent = \"Enter\";\n\n                  buttonElement.addEventListener('click', () => {\n                    buttonElement.classList.add(':hover');\n                    this.properties.value +=  \"\\n\";\n                    this.triggerEvent ('oninput');\n                  });\n                  break;\n\n                  case \"Shift\":\n                  buttonElement.classList.add('btn-wide', 'btn-dark');\n                  buttonElement.textContent = \"Shift\";\n\n                  buttonElement.addEventListener('click', () => {\n\n                    this.triggerEvent ('oninput');\n                  });\n                  break;\n\n                  case \"Ctrl\":\n                    buttonElement.classList.add('btn-wide', 'btn-dark');\n                    buttonElement.textContent = \"Ctrl\";\n\n                    buttonElement.addEventListener('click', () => {\n\n                      this.triggerEvent ('oninput');\n                    });\n                    break;\n\n                    case \"Win\":\n                      buttonElement.classList.add('btn-wide', 'btn-dark');\n                      buttonElement.textContent = \"Win\";\n\n                      buttonElement.addEventListener('click', () => {\n\n                        this.triggerEvent ('oninput');\n                      });\n                      break;\n\n                      case \"Alt\":\n                        buttonElement.classList.add('btn-wide', 'btn-dark');\n                        buttonElement.textContent = \"Alt\";\n\n                        buttonElement.addEventListener('click', () => {\n\n                          this.triggerEvent ('oninput');\n                        });\n                        break;\n\n                  case \"Space\":\n                    buttonElement.classList.add('btn-extra-wide', 'btn-dark');\n\n                    buttonElement.addEventListener('click', () => {\n                      this.properties.value +=  \" \";\n                      this.triggerEvent ('oninput');\n                    });\n                    break;\n\n                    case \"↑\":\n                    buttonElement.classList.add('btn-dark');\n                    buttonElement.textContent = \"↑\";\n\n                    buttonElement.addEventListener('click', () => {\n\n                      this.triggerEvent ('oninput');\n                    });\n                    break;\n\n                    case \"←\":\n                      buttonElement.classList.add('btn-dark');\n                      buttonElement.textContent = \"←\";\n\n                    buttonElement.addEventListener('click', () => {\n\n                      this.triggerEvent ('oninput');\n                    });\n                    break;\n\n                    case \"↓\":\n                      buttonElement.classList.add('btn-dark');\n                      buttonElement.textContent = \"↓\";\n\n                    buttonElement.addEventListener('click', () => {\n\n                      this.triggerEvent ('oninput');\n                    });\n                    break;\n\n                    case  \"→\":\n                      buttonElement.classList.add('btn-dark');\n                      buttonElement.textContent =  \"→\";\n\n                    buttonElement.addEventListener('click', () => {\n\n                      this.triggerEvent ('oninput');\n                    });\n                    break;\n\n                    default:\n                      buttonElement.textContent = button.toLowerCase();\n                      buttonElement.addEventListener('click', () => {\n                      this.properties.value +=  this.properties.capsLock ? button.toUpperCase() : button.toLowerCase();\n                      this.triggerEvent ('oninput');\n                    });\n                    break;\n              }\n\n              fragment.append(buttonElement);\n              if(lineBreak) {\n                fragment.append(document.createElement('br'));\n              }\n  });\n  return fragment;\n  },\n\n};\n\nwindow.addEventListener('DOMContentLoaded', function () {\n  KeyboardContainer.init();\n})\n"],"names":["KeyboardContainer","elements","keyboard","keyboardButtons","buttons","eventHandlers","oninput","properties","value","capsLock","shift","alt","lang","init","main","document","createElement","classList","add","body","append","wrapper","title","textContent","prepend","textarea","focus","this","description","switchLanguage","createButtons","querySelectorAll","forEach","elem","addEventListener","open","currentValue","triggerEvent","handlerName","querySelector","initialValue","fragment","createDocumentFragment","button","buttonElement","lineBreak","indexOf","setAttribute","substring","length","switchCapsLock","toggle","toLowerCase","toUpperCase","window"],"sourceRoot":""}