{"version":3,"file":"main.903d0750e455ead5441a.js","mappings":"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","sources":["webpack://section_1_web/./src/index.js"],"sourcesContent":["import '/src/scss/normalize.css';\nimport '/src/scss/style.scss';\nwindow.addEventListener('DOMContentLoaded', function () {\n  KeyboardContainer.init();\n})\n\nconst KeyboardContainer = {\n  elements: {\n      keyboard: null,\n      keyboardButtons: null,\n      buttons: []\n  },\n\n  eventHandlers: {\n    oninput: null\n},\n\n  properties: {\n      value: \"\",\n      capsLock: false,\n      shift: false,\n      alt: false\n  },\n\n// создаем элементы\ninit() {\nconst main = document.createElement('div');\nmain.classList.add('main');\ndocument.body.append(main);\n\nconst wrapper = document.createElement('div');\nwrapper.classList.add('wrapper');\nmain.append(wrapper);\n\nconst title = document.createElement('h1');\ntitle.classList.add('title');\ntitle.textContent = 'RSS Виртуальная клавиатура';\nmain.prepend(title);\n\nconst textarea = document.createElement('textarea');\ntextarea.classList.add('textarea');\nwrapper.append(textarea);\n\nconst keyboard = document.createElement('div');\nkeyboard.classList.add('keyboard');\nwrapper.append(keyboard);\n\nconst keyboardButtons = document.createElement('div');\nkeyboardButtons.classList.add('keyboard-buttons');\nkeyboard.append(keyboardButtons);\nthis.elements.keyboardButtons = keyboardButtons;\n\nconst description = document.createElement('p');\ndescription.classList.add('description');\ndescription.textContent = 'Клавиатура создана в операционной системе Windows';\nwrapper.append(description);\n\nconst switchLanguage = document.createElement('p');\nswitchLanguage.classList.add('switch-language');\nswitchLanguage.textContent = 'Для переключения языка комбинация клавиш: левыe ctrl + alt';\nwrapper.append(switchLanguage);\n\nkeyboardButtons.append(this.createButtons());\n\n\n\n},\n\ntriggerEvent(handlerName) {\n\n  this.elements.buttons = this.elements.keyboardButtons.querySelector('.keyboard-button');\nconsole.log(\"event:\" + handlerName);\n\n  if (typeof this.eventHandlers[handlerName] == \"function\") {\n      this.eventHandlers[handlerName](this.properties.value);\n  }\n},\n\n\ncreateButtons () {\n  const fragment = document.createDocumentFragment();\n  const buttonsEn = [\n    \"`\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"0\", \"Backspace\",\n    \"Tab\" ,\"q\", \"w\", \"e\", \"r\", \"t\", \"y\", \"u\", \"i\", \"o\", \"p\", \"[\", \"]\", \"\\\\\", \"Del\",\n    \"CapsLock\", \"a\", \"s\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \";\", \"'\", \"Enter\",\n    \"Shift\", \"z\", \"x\", \"c\", \"v\", \"b\", \"n\", \"m\", \",\", \".\", \"/\", \"↑\",\n    \"Ctrl\", \"Win\", \"Alt\", \"Space\", \"←\", \"↓\", \"→\"\n  ];\n\n  buttonsEn.forEach(button => {\n    const buttonElement = document.createElement('button');\n    const lineBreak = [\"Backspace\", \"Delete\", \"Enter\", \"↑\"].indexOf(button) !== -1; // переносы\n\n              buttonElement.setAttribute('type', 'button');\n              buttonElement.classList.add('keyboard-button');\n\n              switch(button) {\n                case \"`\":\n                  buttonElement.classList.add('btn-dark');\n                  buttonElement.textContent = \"`\";\n                  break;\n\n                case \"Backspace\":\n                  buttonElement.classList.add('btn-wide', 'btn-dark');\n                  buttonElement.textContent = \"Backspace\";\n\n                  buttonElement.addEventListener('click', () => {\n                    this.properties.value = this.properties.value.substring(0, this.properties.value.length - 1);\n                    this.triggerEvent ('oninput');\n                  });\n                  break;\n\n                  case \"Tab\":\n                  buttonElement.classList.add('btn-dark');\n                  buttonElement.textContent = \"Tab\";\n\n                  buttonElement.addEventListener('click', () => {\n                    this.properties.value +=  \"    \";\n                    this.triggerEvent ('oninput');\n                  });\n                  break;\n\n                  case \"Del\":\n                  buttonElement.classList.add('btn-dark');\n                  buttonElement.textContent = \"Del\";\n\n                  buttonElement.addEventListener('click', () => {\n                    this.properties.value = this.properties.value.substring(0, this.properties.value.length - 1);\n                    this.triggerEvent ('oninput');\n                  });\n                  break;\n\n                  case \"CapsLock\":\n                    buttonElement.classList.add('btn-wide', 'btn-dark');\n                    buttonElement.textContent = \"CapsLock\";\n\n                    buttonElement.addEventListener('click', () => {\n                      this.switchCapsLock();\n                      buttonElement.classList.toggle(this.properties.capsLock);\n                    });\n                    break;\n\n                  case \"Enter\":\n                  buttonElement.classList.add('btn-wide', 'btn-dark');\n                  buttonElement.textContent = \"Enter\";\n\n                  buttonElement.addEventListener('click', () => {\n                    buttonElement.classList.add(':hover');\n                    this.properties.value +=  \"\\n\";\n                    this.triggerEvent ('oninput');\n                  });\n                  break;\n\n                  case \"Shift\":\n                  buttonElement.classList.add('btn-wide', 'btn-dark');\n                  buttonElement.textContent = \"Shift\";\n\n                  buttonElement.addEventListener('click', () => {\n\n                    this.triggerEvent ('oninput');\n                  });\n                  break;\n\n                  case \"Ctrl\":\n                    buttonElement.classList.add('btn-wide', 'btn-dark');\n                    buttonElement.textContent = \"Ctrl\";\n\n                    buttonElement.addEventListener('click', () => {\n\n                      this.triggerEvent ('oninput');\n                    });\n                    break;\n\n                    case \"Win\":\n                      buttonElement.classList.add('btn-wide', 'btn-dark');\n                      buttonElement.textContent = \"Win\";\n\n                      buttonElement.addEventListener('click', () => {\n\n                        this.triggerEvent ('oninput');\n                      });\n                      break;\n\n                      case \"Alt\":\n                        buttonElement.classList.add('btn-wide', 'btn-dark');\n                        buttonElement.textContent = \"Alt\";\n\n                        buttonElement.addEventListener('click', () => {\n\n                          this.triggerEvent ('oninput');\n                        });\n                        break;\n\n                  case \"Space\":\n                    buttonElement.classList.add('btn-extra-wide', 'btn-dark');\n\n                    buttonElement.addEventListener('click', () => {\n                      this.properties.value +=  \" \";\n                      this.triggerEvent ('oninput');\n                    });\n                    break;\n\n                    case \"↑\":\n                    buttonElement.classList.add('btn-dark');\n                    buttonElement.textContent = \"↑\";\n\n                    buttonElement.addEventListener('click', () => {\n\n                      this.triggerEvent ('oninput');\n                    });\n                    break;\n\n                    case \"←\":\n                      buttonElement.classList.add('btn-dark');\n                      buttonElement.textContent = \"←\";\n\n                    buttonElement.addEventListener('click', () => {\n\n                      this.triggerEvent ('oninput');\n                    });\n                    break;\n\n                    case \"↓\":\n                      buttonElement.classList.add('btn-dark');\n                      buttonElement.textContent = \"↓\";\n\n                    buttonElement.addEventListener('click', () => {\n\n                      this.triggerEvent ('oninput');\n                    });\n                    break;\n\n                    case  \"→\":\n                      buttonElement.classList.add('btn-dark');\n                      buttonElement.textContent =  \"→\";\n\n                    buttonElement.addEventListener('click', () => {\n\n                      this.triggerEvent ('oninput');\n                    });\n                    break;\n\n                    default:\n                      buttonElement.textContent = button.toLowerCase();\n                      buttonElement.addEventListener('click', () => {\n                      this.properties.value +=  this.properties.capsLock ? button.toUpperCase() : button.toLowerCase();\n                      this.triggerEvent ('oninput');\n                    });\n                    break;\n              }\n\n              fragment.append(buttonElement);\n              if(lineBreak) {\n                fragment.append(document.createElement('br'));\n              }\n  });\n  return fragment;\n  },\n};\n"],"names":["window","addEventListener","KeyboardContainer","init","elements","keyboard","keyboardButtons","buttons","eventHandlers","oninput","properties","value","capsLock","shift","alt","main","document","createElement","classList","add","body","append","wrapper","title","textContent","prepend","textarea","this","description","switchLanguage","createButtons","triggerEvent","handlerName","querySelector","console","log","fragment","createDocumentFragment","forEach","button","buttonElement","lineBreak","indexOf","setAttribute","substring","length","switchCapsLock","toggle","toLowerCase","toUpperCase"],"sourceRoot":""}